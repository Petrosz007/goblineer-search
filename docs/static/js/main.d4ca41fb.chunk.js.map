{"version":3,"sources":["Search.js","Table.js","App.js","registerServiceWorker.js","index.js"],"names":["Search","search","this","props","react_default","a","createElement","type","name","placeholder","id","className","autocomplete","autocorrect","autocapitalize","spellcheck","value","onChange","handleChange","Component","Table","numberFormat","num","_this","thousandPlaceFormat","parseFloat","Math","round","toFixed","toString","replace","window","$WowheadPower","refreshLinks","_this2","filtered","length","rows","map","item","index","key","href","target","rel","Name","MIN","class","marketvalue","quantity","App","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","event","setState","document","getElementsByClassName","style","margin","getElementById","width","borderRadius","top","filteredList","state","data","filter","toLowerCase","indexOf","sort","b","bind","assertThisInitialized","fetch","then","result","json","src_Search","handleSearch","src_Table","isLocalhost","Boolean","location","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","catch","error","ReactDOM","render","src_App","URL","process","origin","addEventListener","concat","response","status","headers","get","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.d4ca41fb.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\n\r\nclass Search extends Component {\r\n    render() {\r\n        const { search } = this.props; \r\n        return (\r\n            <input \r\n                type=\"text\" \r\n                name=\"search\" \r\n                placeholder=\"Type the name of the item you want to search for\"\r\n                id=\"searchField\" \r\n                className=\"searchField\" \r\n                autocomplete=\"off\" autocorrect=\"off\" autocapitalize=\"off\" spellcheck=\"false\"\r\n                value={search} \r\n                onChange={this.props.handleChange}/>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Search;","import React, { Component } from 'react';\r\n\r\nclass Table extends Component {\r\n    componentDidUpdate() {\r\n        window.$WowheadPower.refreshLinks()\r\n    }\r\n\r\n    render() {\r\n        const TableHead = (props) => {\r\n            if(props.filtered.length !== 0) {\r\n                return (\r\n                    <thead>\r\n                        <th><b>Name</b></th>\r\n                        <th><b>Min</b></th>\r\n                        <th><b>Marketvalue</b></th>\r\n                        <th><b>Quantity</b></th>\r\n                    </thead>\r\n                );\r\n            } else {\r\n                return(<thead></thead>);\r\n            }\r\n        }\r\n        const TableBody = (props) => {\r\n            const rows = props.filtered.map((item, index) => {\r\n                return <tr key={index}>\r\n                            <td className=\"tdAlignLeft\"><a href={'https://www.goblineer.net/item/' + item.item} target=\"_blank\" className='q3 iconmedium1 links' rel={'item=' + item.item} Name=\"text-center\"></a></td>\r\n                            <td className=\"tdAlignRight\">{this.numberFormat(item.MIN)}<span class='gold-g'>g </span></td>\r\n                            <td className=\"tdAlignRight\">{this.numberFormat(item.marketvalue)}<span class='gold-g'>g </span></td>\r\n                            <td className=\"tdAlignRight\">{this.thousandPlaceFormat(item.quantity)}</td>\r\n                        </tr>;\r\n            });\r\n\r\n            return (\r\n                <tbody>\r\n                    {rows}\r\n                </tbody>\r\n            );\r\n        }\r\n        \r\n        return (\r\n            <table className=\"mainTable\">\r\n                <TableHead filtered={this.props.filtered}/>\r\n                <TableBody filtered={this.props.filtered} />\r\n            </table>\r\n        );\r\n    }\r\n\r\n    numberFormat = num => {return this.thousandPlaceFormat(parseFloat(Math.round(num * 100) / 100).toFixed(2))}\r\n    thousandPlaceFormat = num => {return num.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\")}\r\n}\r\n\r\nexport default Table;","import React, { Component } from 'react';\r\nimport Search from './Search';\r\nimport Table from './Table';\r\n\r\nclass App extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.handleChange = this.handleChange.bind(this);\r\n\r\n        this.state = {\r\n            data: [],\r\n            search: '',\r\n            filtered: []\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        const url = \"https://goblineer.net/json/mv_names.json\";\r\n\r\n        fetch(url)\r\n            .then(result => result.json())\r\n            .then(result => {\r\n                this.setState({\r\n                    data: result\r\n                })\r\n            });\r\n    }\r\n\r\n    render() {\r\n        const { filtered } = this.state;\r\n\r\n        return (\r\n            <div className=\"container\">\r\n                {/* <div id=\"navbar\" className=\"navbar\">\r\n                    <ul className=\"nav-items\">\r\n                        <li className=\"nav-item\">Categories</li>\r\n                        <li className=\"nav-item\">Addon</li>\r\n                        <li className=\"nav-item\">Undercut Checker</li>\r\n                        <li className=\"nav-item\">Seller Search</li>\r\n                        <li className=\"nav-item\">Custom Tables</li>\r\n                    </ul>\r\n                </div> */}\r\n                <div id=\"searchBox\" className=\"searchBox\">\r\n                    <h1 className=\"title\">Goblineer</h1>\r\n                    <Search handleChange={this.handleChange} handleSearch={this.handleSearch} />\r\n                    <Table filtered={filtered} />\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    handleChange = event => {\r\n        const { value } = event.target;\r\n\r\n        this.setState({\r\n            search: value\r\n        });\r\n\r\n        if(value.length <= 3) {\r\n            this.setState({\r\n                filtered: []\r\n            });\r\n\r\n            document.getElementsByClassName('title')[0].style.margin = '0 0 0 0';\r\n            document.getElementById('searchField').style.width = '800px';\r\n            document.getElementById('searchField').style.borderRadius = '10px 10px 10px 10px';\r\n            document.getElementById('searchBox').style.top = '50%';\r\n            document.getElementById('searchBox').style.margin = '-167px 0 0 0';\r\n        } else if(value.length >= 4) {\r\n            // document.getElementsByClassName('title')[0].style.margin = '-131px 0 0 0';\r\n            document.getElementsByClassName('title')[0].style.margin = '-115px 0 0 0';\r\n            document.getElementById('searchField').style.width = '100%';\r\n            document.getElementById('searchField').style.borderRadius = '0';\r\n            document.getElementById('searchBox').style.top = '0';\r\n            document.getElementById('searchBox').style.margin = '0 0 0 0';\r\n\r\n            let filteredList = this.state.data.filter(item => {\r\n                if(item.name) {\r\n                    return item.name.toLowerCase().indexOf(value.toLowerCase()) !== -1;\r\n                }\r\n            });\r\n\r\n            filteredList.sort((a, b) => {\r\n                return b.marketvalue - a.marketvalue;\r\n            });\r\n\r\n            this.setState({\r\n                filtered: filteredList\r\n            });\r\n        }\r\n    }\r\n}\r\nexport default App;","// In production, we register a service worker to serve assets from local cache.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\r\n// cached resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\r\n// This link also includes instructions on opting out of this behavior.\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport default function register() {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Lets check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not local host. Just register service worker\r\n        registerValidSW(swUrl);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the old content will have been purged and\r\n              // the fresh content will have been added to the cache.\r\n              // It's the perfect time to display a \"New content is\r\n              // available; please refresh.\" message in your web app.\r\n              console.log('New content is available; please refresh.');\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      if (\r\n        response.status === 404 ||\r\n        response.headers.get('content-type').indexOf('javascript') === -1\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport registerServiceWorker from './registerServiceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\nregisterServiceWorker();\r\n"],"sourceRoot":""}